backend 
1. перенести всю логику на бэк +
2. создание приглашение
3. фильтр длины слова 
4. решение базу слов
5. photon

front 
1. перенос слов 
2. сцены (лобби, игра, главное меню)
    -идет поиск соперник в лобби 
    -переход на игру
3. анимация персонажей (healthbar, time, bg)
4. звуки






	/*
		1. roomName статич. свойство в игроке во фронте +
		2. не надо отправлять index игрока, ненадёжно. Проверять надо на socket_id
		3. в самих сокетах хранить экземпляр класса room. Создаю ключ для экземпляра класса Room.+ 
		4. Добавить checkword на бэк.
		когда пользователь вводит слово, надо отправлять на сервер слово и проверять есть ли такое слово у самого игрока и у другого игрока. 
		 
	*/
	

















1. Найти список слов. 
    Вывести рандомное слово из текстового файла на сервере +
    Вывести слова на фронте + 
    у меня есть слово, 
    беру из списка слов-> слово и проверяю входят ли его буквы в буквы главного слово. 

    пежздёж
    еж, есть первая буква и вторая буква. 
2. Найти модуль для ноды который генерирует анаграмы

scoket:
emit - отправляет данные
on - принимает данные
каждый сокет находится уже в комнате, со своим id т.е. у него уже есть свой room с id
rooms = io.sockets.adapter.rooms - получить все комнаты
rooms.size - количество комнат